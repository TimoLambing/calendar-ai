services:
  frontend-blue:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: calendar_frontend_blue
    ports:
      - "8086:3000" # Exposes your React build on host:port 8086
    networks:
      - app-network
    depends_on:
      - backend-blue
    restart: always

  backend-blue:
    build:
      context: ./server
      dockerfile: Dockerfile
      container_name: calendar_backend_blue
    # If you want the server to read from .env.dev
    ports:
      - "5002:6060" # Exposes Express on host:port 5002
    env_file:
      - ./server/.env.dev
    volumes:
      - uploads:/app/public/uploads
    restart: always
    networks:
      - app-network
    command: node /app/src/index.ts

  frontend-green:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: calendar_frontend_green
    ports:
      - "8087:3000" # Exposes your React build on host:port 8087
    networks:
      - app-network
    depends_on:
      - backend-green
    restart: always

  backend-green:
    build:
      context: ./server
      dockerfile: Dockerfile
      container_name: calendar_backend_green
    ports:
      - "5001:4000"
    env_file:
      - ./server/.env.dev
    volumes:
      - uploads:/app/public/uploads
    restart: always
    networks:
      - app-network
    command: node /app/src/index.ts

networks:
  app-network:
    external: true

volumes:
  uploads:
